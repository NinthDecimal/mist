jar_path = ${MIST_HOME}"/mist-examples-spark2.jar"
py_path = ${MIST_HOME}"/examples-python"

pca_jar_path = "/usr/share/external_jars/pca-scala-1.26-SNAPSHOT.jar"
pca_class_name = "com.jiwire.pca.PcaMistEntryPoint$"


visit-metrics = {
  path = "/usr/share/external_jars/nd-visit-metrics_2.11-0.1.jar"
  className = "com.jiwire.VisitRateMist$"
  namespace = "poc"
}

data-availability = {
  path = ${pca_jar_path}
  className = "com.jiwire.pca.UserIdTablesDataAvailability$"
  namespace = "hot_shared"
}

simple-context = {
  path = ${jar_path}
  className = "SimpleContext$"
  namespace = "foo"
}

simple-context-py = {
  path = ${py_path}"/simple_context.py"
  className = "SimpleContext"
  namespace = "foo"
}

pca-default = {
  path = ${pca_jar_path}
  className = ${pca_class_name}
  namespace = "pca-default"
}

pca-default-exclusive = {
  path = ${pca_jar_path}
  className = ${pca_class_name}
  namespace = "pca-default-exclusive"
}

pca-default-shared = {
  path = ${pca_jar_path}
  className = ${pca_class_name}
  namespace = "pca-default-shared"
}

pca-create-ref-tables = {
  path = ${pca_jar_path}
  className = ${pca_class_name}
  namespace = "PCA_EP-Create_Ref_Tables"
}

pca-filter-ida-task = {
  path = ${pca_jar_path}
  className = ${pca_class_name}
  namespace = "PCA_EP-filter_IDA_task"
}

pca-filter-ca-event-task = {
  path = ${pca_jar_path}
  className = ${pca_class_name}
  namespace = "PCA_EP-filter_CA_events_task"
}

pca-filter-events-task = {
  path = ${pca_jar_path}
  className = ${pca_class_name}
  namespace = "PCA_EP-filter_events_task"
}

pca-write-new-events = {
  path = ${pca_jar_path}
  className = ${pca_class_name}
  namespace = "PCA_EP-write_new_events"
}

pca-filter-ref-tables = {
  path = ${pca_jar_path}
  className = ${pca_class_name}
  namespace = "PCA_EP-filter_ref_tables"
}

pca-run-task = {
  path = ${pca_jar_path}
  className = ${pca_class_name}
  namespace = "PCA_EP-PCA_run_task"
}

pca-output-task = {
  path = ${pca_jar_path}
  className = ${pca_class_name}
  namespace = "PCA_EP-output_taskAll"
}

pca-event-log-tracking = {
  path = ${pca_jar_path}
  className = ${pca_class_name}
  namespace = "PCA_EP-EventLogTracking"
}

pca-test-paraccel = {
  path = ${pca_jar_path}
  className = ${pca_class_name}
  namespace = "PCA_EP-TestParaccel"
}

pca-wrapper = {
  path = "/usr/share/external_jars/pca-wrapper.py"
  className = "PcaWrapper"
  namespace = "pca-wrapper"
}
